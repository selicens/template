.ant-layout {
  min-height: 100%;
}

.ant-menu {
  min-height: 100%;
  background-color: transparent;
  flex: 1 1 0%;
  overflow: hidden auto;
}

.ant-menu-light.ant-menu-root.ant-menu-inline,
.ant-menu-light.ant-menu-root.ant-menu-vertical {
  border-inline-end: none;
}

.layout-header {
  height: 100%;
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0 20px;
}

.layout-header-left {
  display: flex;
  align-items: center;
  height: 100%;
}
.layout-header-left-logo {
  position: relative;
  margin-inline-end: 16px;
}

.layout-header-left-title {
  height: 32px;
  margin-block: 0;
  margin-inline: 0;
  margin-inline-start: 8px;
  font-weight: 600;
  color: rgba(0, 0, 0, 0.88);
  font-size: 18px;
  line-height: 32px;
}

.layout-header-right {
  color: rgba(0, 0, 0, 0.45);
  .ant-space-item {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding-block: 0;
    padding-inline: 2px;
    color: rgba(0, 0, 0, 0.45);
    font-size: 16px;
    cursor: pointer;
    border-radius: 6px;
  }
}

.layout-sider-collapsed-button {
  position: absolute;
  inset-block-start: 18px;
  z-index: 101;
  width: 24px;
  height: 24px;
  text-align: center;
  border-radius: 40px;
  inset-inline-end: -13px;
  transition: transform 0.3s;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  color: rgba(0, 0, 0, 0.25);
  background-color: #ffffff;
  box-shadow:
    0 2px 8px -2px rgba(0, 0, 0, 0.05),
    0 1px 4px -1px rgba(25, 15, 15, 0.07),
    0 0 1px 0 rgba(0, 0, 0, 0.08);
}
:deep(.ant-alert-content) {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

:deep(.ant-alert-message) {
  animation: scroll 14s linear infinite;
}

.ant-layout .layout-bg {
  pointer-events: none;
  /* position: fixed; */
  overflow: hidden;
  inset-block-start: 0;
  inset-inline-start: 0;
  z-index: 0;
  height: 100%;
  width: 100%;
  background: linear-gradient(#ffffff, #f5f5f5 28%);
}

@keyframes scroll {
  0% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(-100%);
  }
}
